[tox]
minversion = 3.8.0
envlist =
    py34,
    py35,
    py36,
    fix_lint,
skip_missing_interpreters = true

[testenv]
deps =
    pip >= 19.0.1
    backports: backports.typing
extras = testing
commands = python -m pytest {posargs}
description = run test suite under {basepython}

[testenv:publish]
description = build and publish library to Artifactory
passenv = https_proxy no_proxy
skip_install = true
deps = twine >= 1.11.0, <2
       pip >= 18.0.0
commands = pip wheel -w {envtmpdir}/build --no-deps .
           twine upload --repository {posargs:pypi-release} {envtmpdir}/build/*

[testenv:dev]
basepython = python3.6
description = dev environment with all deps at {envdir}
extras = testing, docs
usedevelop = True
commands = python -m pip list --format=columns
           python -c "print(r'{envpython}')"

[isort]
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
line_length = 99
known_first_party = tox,tests
known_third_party = pytest,pytypes,setuptools,sphinx

[testenv:fix_lint]
description = format the code base to adhere to our styles, and complain about what we cannot do automatically
basepython = python3.7
passenv = HOMEPATH
          # without PROGRAMDATA cloning using git for Windows will fail with an
          # `error setting certificate verify locations` error
          PROGRAMDATA
extras = lint
deps = pre-commit >= 1.14.4, < 2
skip_install = True
commands = pre-commit run --all-files --show-diff-on-failure
           python -c 'import pathlib; print("hint: run \{\} install to add checks as pre-commit hook".format(pathlib.Path(r"{envdir}") / "bin" / "pre-commit"))'
